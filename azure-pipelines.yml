trigger: [ master ]
pool:
  vmImage: 'Ubuntu 16.04'

# Variables to use in build tasks
variables:
  serviceConnectionAzureSubscription: nameOfTheServiceConnection # replace with Azure DevOps Azure ARM service connection name
  keyVaultName: nameOfKeyVault # replace with name of KeyVault used to store CI/CD pipeline secrets
  secretsFilter: '*' # replace with name of secret or * for all secrets
  modifiedPoliciesFilePath: policies/modified.yml # replace with name of yml file containing all policies that have been modified and need to be validated
  configFilePath: policies/config.json # replace with path to policy config file if not default
  policyFilePath: policies/policies.json # replace with path to policy file if not default
  outputPath: / # replace with path for Custodian policy run output

# Build tasks
steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.6'
  - task: AzureKeyVault@1
    displayName: 'Download Azure Key Vault Secrets'
    inputs:
      azureSubscription: $(serviceConnectionAzureSubscription)
      keyVaultName: $(keyVaultName)
      secretsFilter: $(secretsFilter)
  - script: wget https://github.com/libgit2/libgit2/archive/v0.27.0.tar.gz &&
            tar xzf v0.27.0.tar.gz &&
            cd libgit2-0.27.0/ &&
            cmake . &&
            make &&
            sudo make install &&
            sudo ldconfig
    displayName: 'Install libgit2'
  - script: python -m pip install --upgrade pip setuptools wheel
    displayName: 'Install tools'
  - script: git clone https://github.com/erwelch/cloud-custodian --branch erwelch-tmp-storage &&
            pip install ./cloud-custodian &&
            pip install ./cloud-custodian/tools/c7n_azure
    displayName: 'Install Cloud Custodian'
  - script: pip install -r requirements.txt
    displayName: 'Install pip dependencies'
  - script: wget -O policies/policystream.py 'https://raw.githubusercontent.com/capitalone/cloud-custodian/master/tools/ops/policystream.py' &&
            chmod +x policies/policystream.py
    displayName: 'Get policystream script'
  - task: PythonScript@0
    displayName: 'Get all custodian policies that have been modified'
    inputs:
      scriptSource: 'filePath'
      scriptPath: 'policies/policystream.py'
      arguments: 'diff -r . --source origin/master --target HEAD -o $(modifiedPoliciesFilePath)'
      faillOnStderr: false
  - script: 'custodian validate $(modifiedPoliciesFilePath)'
    displayName: 'Validate all modified policies'
  - task: PythonScript@0
    displayName: 'Validate that modified policies are in function mode'
    inputs:
      scriptSource: 'filePath'
      scriptPath: "src/build/scripts/validate_policy_mode.py"
      arguments: '-m $(modifiedPoliciesFilePath)'
      failOnStderr: false
  - task: PythonScript@0
    displayName: 'Dry run Custodian policies to get all resources that will be affected by the policy'
    inputs:
      scriptSource: 'filePath'
      scriptPath: "src/build/scripts/policy_runner.py"
      arguments: '-c $(configFilePath) -p $(policyFilePath) -t $(CloudCustodianSPTenantId) -a(CloudCustodianSPAppId) -s $(CloudCustodianSPClientSecret) -o $(outputPath) --dryrun'
      failOnStderr: false
  - task: CopyFiles@2
    inputs:
      contents: 'policies\**\*'
      targetFolder: '$(Build.ArtifactStagingDirectory)'
  - task: CopyFiles@2
    inputs:
      contents: 'src/build/scripts/policy_runner.py'
      targetFolder: '$(Build.ArtifactStagingDirectory)'
      flattenFolders: true
  - task: PublishBuildArtifacts@1
    inputs:
      PathToPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: policies
      publishLocation: Container
